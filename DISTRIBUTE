Building spacepy for distribution (20191002)
============================================
Since this has to happen on multiple platforms, a single script doesn't work.

Prepare the release commit
--------------------------

Note: it's probably best to get the latest up on test PyPI first to
make sure it works!

Edit the CHANGELOG to include the release date.

Edit Doc/source/conf.py. Around line 128, remove (DRAFT) from the title.
    Change version around line 72 (two places!)
Change version in setup.py, in setup_kwargs near bottom.
Change __version__ around line 136 of __init__.py.

Commit these changes. Submit PR. (Tagging is done on github now.)

Prepare the source build
------------------------

On a Unix machine:
check out the latest from git (hopefully the release commit!)

Build and install so you're getting the latest inputs for the autodocs. Then:
    python setup.py sdist --formats=gztar,zip
Tarball and zip are in the dist directory.

Note: building the source distribution will build the docs, but no longer needs
to do a binary build.

Prepare the Windows binaries
----------------------------

Unzip the source distribution from the Unix side. Get the Windows
build scripts from the repository. They're in developer/scripts but
are not included in the source distribution. They need to be put in
developer/scripts in the unzipped source so they can find the rest of
SpacePy. Yes this could be improved.

Download latest (currently 3.7) 64-bit Miniconda from
https://docs.conda.io/en/latest/miniconda.html and put it in the
system-default download directory (%USERPROFILE%\Downloads)

Run win_build_system_setup.cmd, build_win.cmd, and
win_build_system_teardown.cmd. Windows binaries and wheels will be in
the "dist" directory of the SpacePy distribution.

The wheels are compliant with metadata 2.0 but are labeled as 2.1, which makes for problems unless everybody has the very newest version of everything. For now, we should edit them.

for i in *.whl; do unzip $i "spacepy-*.dist-info/METADATA"; sed -i -e "s/Metadata-Version: 2.1/Metadata-Version: 2.0/" spacepy-*.dist-info/METADATA; zip $i "spacepy-*.dist-info/METADATA"; rm -rf spacepy-*.dist-info; done

Docs
----

From the Doc directory:
cp build/latex/SpacePy.pdf spacepy-x.y.z-doc.pdf
cd build/html
zip -r ../../spacepy-0.2.1-doc.zip *

Test PyPI
---------

https://packaging.python.org/guides/using-testpypi/

Consider https://www.python.org/dev/peps/pep-0440/#pre-releases

Make a .pypirc file, see https://docs.python.org/3.3/distutils/packageindex.html

[distutils]
index-servers =
    pypi
    testpypi

[pypi]
username: <username>

[testpypi]
repository: https://test.pypi.org/legacy
username: <username>

(end of .pypirc)

Put all the builds (wheels, source dists, not the docs) into one directory and:

  twine upload -r testpypi spacepy-*.zip spacepy-*.whl

PyPI does not support Windows standalone installers.

Test installing with:

  pip install -i https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ spacepy

Do this on Windows without compilers installed, and in a clean Linux
Anaconda env.

Release to PyPI
---------------

https://python-packaging-tutorial.readthedocs.io/en/latest/uploading_pypi.html

  twine upload spacepy-*.zip spacepy-*.whl

Do not upload the .tar.gz since can only upload one source package per release.

There's no longer any capability to edit information on PyPI, it's
straight from the setup.py metadata. This may cause problems with the
fact that we're CamelCase on PyPI...

Release to github
-----------------

https://help.github.com/en/articles/creating-releases

On the code tab, click on "n releases" (between branches and
contributors). Click "Draft a new release." Make the tag
"release-x.y.z" and hopefully the target will be master if it's up to
date. The most consistent with what we've done so far (which is not
necessarily the best) is to use just "x.y.z" as the title with nothing
the "describe."

Click in the "upload binaries" area and upload all the files: source
distribution, Windows installers, wheels. Also upload the
documentation PDF (spacepy-x.y.z-doc.pdf) and a zip
(spacepy-x.y.z-doc.zip).

Documentation update
--------------------

Check out the spacepy.github.io repository. Right now the root of the
repo is basically the root of the Doc/build/html output. Copy all the
freshly-built docs there, commit, submit PR.

Relevant notes
--------------

Reference that have been useful for putting the wheels together (this
can eventually be captured elsewhere.)

https://www.python.org/dev/peps/pep-0427/
https://pip.pypa.io/en/stable/reference/pip_wheel/
https://docs.python.org/2/library/sysconfig.html#installation-paths
https://github.com/dask/hdfs3/issues/113
https://python-packaging-tutorial.readthedocs.io/en/latest/uploading_pypi.html
https://packaging.python.org/tutorials/packaging-projects/

Wheel is a separate package but seems to be included with
miniconda. (It's not just pip or setuptools, but it might be a
requirement for pip? Although not installed on Linux with pip.)

https://stackoverflow.com/questions/45150304/how-to-force-a-python-wheel-to-be-platform-specific-when-building-it
